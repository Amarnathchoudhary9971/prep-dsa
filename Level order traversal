/* A binary tree Node
class Node {
  public:
    int data;
    Node* left;
    Node* right;

    // Constructor
    Node(int val) {
        data = val;
        left = nullptr;
        right = nullptr;
    }
};
*/

class Solution {
  public:
    vector<vector<int>> levelOrder(Node *root) {
        // code here
        vector<vector<int>>ans;
        vector<int>output;
        queue<Node*>q;
        q.push(root);
        q.push(NULL);
        while(!q.empty())
        {
            Node* temp=q.front();
            q.pop();
            if(temp==NULL)
            {
                ans.push_back(output); output.clear();
                
                if(!q.empty())
                {
                    q.push(NULL);
                }
            }else{
            output.push_back(temp->data);
            if(temp->left!=NULL)
            {
                q.push(temp->left);
            }
            if(temp->right!=NULL)
            {
                q.push(temp->right);
            }
            }
        }
        return ans;
    }
};

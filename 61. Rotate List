/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* rotateRight(ListNode* head, int k) {
        int size=0;
        ListNode* temp=head;
        if(head==NULL || head->next==NULL)
        {
            return head;
        }
        while(temp!=NULL)
        {
            size++;
            temp=temp->next;
        }
        int total=k%size;
        int totalMovement=size-total;
        temp=head;
        while(totalMovement!=1)
        {
            totalMovement--;
            temp=temp->next;
        }
        ListNode* temp1=temp;
        while(temp1->next!=NULL)
        {
            temp1=temp1->next;
        }
        temp1->next=head;
        head=temp->next;
        temp->next=NULL;
        return head;
    }
};

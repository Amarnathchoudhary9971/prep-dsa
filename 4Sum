class Solution {
public:
    vector<vector<int>> fourSum(vector<int>& nums, int target) {
        vector<vector<int>> ans;
        sort(nums.begin(), nums.end());
        int n = nums.size();
        
        for (int i = 0; i < n - 3; i++) {
            if (i > 0 && nums[i] == nums[i - 1]) continue; // skip duplicate i

            for (int j = i + 1; j < n - 2; j++) {
                if (j > i + 1 && nums[j] == nums[j - 1]) continue; // skip duplicate j

                int k = j + 1, x = n - 1;

                while (k < x) {
                    long long sum = (long long)nums[i] + nums[j] + nums[k] + nums[x];

                    if (sum == target) {
                        ans.push_back({nums[i], nums[j], nums[k], nums[x]});
                        
                        // skip duplicates for k and x
                        while (k < x && nums[k] == nums[k + 1]) k++;
                        while (k < x && nums[x] == nums[x - 1]) x--;
                        
                        k++;
                        x--;
                    } 
                    else if (sum < target) {
                        k++;
                    } 
                    else {
                        x--;
                    }
                }
            }
        }
        return ans;
    }
};
